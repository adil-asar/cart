{"ast":null,"code":"const Reducer = (state, action) => {\n  if (action.type === 'REMOVE') {\n    return { ...state,\n      item: state.item.filter(elem => elem.id !== action.payload)\n    };\n  }\n\n  if (action.type === 'REMOVEALL') {\n    return { ...state,\n      item: []\n    };\n  }\n\n  if (action.type === 'INCREASE') {\n    const updateincrease = state.item.map(elem => {\n      if (elem.id === action.payload) {\n        return { ...elem,\n          quantity: elem.quantity + 1\n        };\n      }\n\n      return elem;\n    });\n    return { ...state,\n      item: updateincrease\n    };\n  }\n\n  if (action.type === 'DECREASE') {\n    const updatedecrease = state.item.map(elem => {\n      if (elem.id === action.payload) {\n        return { ...elem,\n          quantity: elem.quantity - 1\n        }; //  if (elem.quantity>1) {\n        //     return {...elem,quantity:elem.quantity-1};\n        //  }\n      }\n\n      return elem;\n    }).filter(elem => elem.quantity !== 0);\n    return { ...state,\n      item: updatedecrease\n    };\n  }\n\n  if (action.type === 'total_item') {\n    let {\n      totalItem\n    } = state.item.reduce((accum, curVal) => {\n      let {\n        quantity\n      } = curVal;\n      accum.totalItem += quantity;\n      return accum;\n    }, {\n      totalItem: 0\n    });\n    return { ...state,\n      totalItem\n    };\n  }\n\n  if (action.type === 'total_amount') {\n    let {\n      totalAmount\n    } = state.item.reduce((accum, val) => {\n      let {\n        price\n      } = curVal;\n      accum.totalAmount += price;\n      return accum;\n    }, {\n      totalAmount: 0\n    });\n    return { ...state,\n      totalAmount\n    };\n  }\n\n  return state;\n};\n\n_c = Reducer;\nexport default Reducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reducer\");","map":{"version":3,"sources":["D:/React-Pro/cart/src/reducer.js"],"names":["Reducer","state","action","type","item","filter","elem","id","payload","updateincrease","map","quantity","updatedecrease","totalItem","reduce","accum","curVal","totalAmount","val","price"],"mappings":"AAGC,MAAMA,OAAO,GAAG,CAACC,KAAD,EAAOC,MAAP,KAAkB;AAE/B,MAAIA,MAAM,CAACC,IAAP,KAAgB,QAApB,EAA8B;AAC1B,WAAM,EACF,GAAGF,KADD;AAEFG,MAAAA,IAAI,EAACH,KAAK,CAACG,IAAN,CAAWC,MAAX,CAAmBC,IAAD,IAASA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACM,OAA9C;AAFH,KAAN;AAIH;;AAED,MAAIN,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;AAC7B,WAAO,EAAC,GAAGF,KAAJ;AAAUG,MAAAA,IAAI,EAAC;AAAf,KAAP;AACH;;AAED,MAAIF,MAAM,CAACC,IAAP,KAAgB,UAApB,EAAgC;AAC5B,UAAMM,cAAc,GAAGR,KAAK,CAACG,IAAN,CAAWM,GAAX,CAAgBJ,IAAD,IAAQ;AAC1C,UAAGA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACM,OAAtB,EAA8B;AAC1B,eAAO,EAAC,GAAGF,IAAJ;AAAUK,UAAAA,QAAQ,EAAEL,IAAI,CAACK,QAAL,GAAgB;AAApC,SAAP;AACH;;AACD,aAAOL,IAAP;AACH,KALsB,CAAvB;AAMA,WAAO,EAAC,GAAGL,KAAJ;AAAUG,MAAAA,IAAI,EAACK;AAAf,KAAP;AACH;;AAED,MAAIP,MAAM,CAACC,IAAP,KAAc,UAAlB,EAA8B;AACjC,UAAOS,cAAc,GAAGX,KAAK,CAACG,IAAN,CAAWM,GAAX,CAAgBJ,IAAD,IAAQ;AAC9C,UAAIA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACM,OAAvB,EAAgC;AAC9B,eAAO,EAAC,GAAGF,IAAJ;AAASK,UAAAA,QAAQ,EAACL,IAAI,CAACK,QAAL,GAAc;AAAhC,SAAP,CAD8B,CAE1B;AACA;AACA;AACJ;;AACD,aAAOL,IAAP;AACD,KARuB,EAQrBD,MARqB,CAQbC,IAAD,IAASA,IAAI,CAACK,QAAL,KAAkB,CARb,CAAxB;AASI,WAAM,EAAC,GAAGV,KAAJ;AAAUG,MAAAA,IAAI,EAACQ;AAAf,KAAN;AACA;;AAEL,MAAIV,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAkC;AAC7B,QAAI;AAACU,MAAAA;AAAD,QAAcZ,KAAK,CAACG,IAAN,CAAWU,MAAX,CAAkB,CAACC,KAAD,EAAOC,MAAP,KAAgB;AACjD,UAAI;AAACL,QAAAA;AAAD,UAAaK,MAAjB;AACAD,MAAAA,KAAK,CAACF,SAAN,IAAmBF,QAAnB;AAEA,aAAOI,KAAP;AACF,KALiB,EAKhB;AACCF,MAAAA,SAAS,EAAC;AADX,KALgB,CAAlB;AASA,WAAO,EAAC,GAAGZ,KAAJ;AAAUY,MAAAA;AAAV,KAAP;AACJ;;AAED,MAAIX,MAAM,CAACC,IAAP,KAAgB,cAApB,EAAoC;AAChC,QAAI;AAACc,MAAAA;AAAD,QAAgBhB,KAAK,CAACG,IAAN,CAAWU,MAAX,CAAkB,CAACC,KAAD,EAAOG,GAAP,KAAa;AAC/C,UAAI;AAACC,QAAAA;AAAD,UAAUH,MAAd;AACAD,MAAAA,KAAK,CAACE,WAAN,IAAmBE,KAAnB;AACA,aAAOJ,KAAP;AACH,KAJmB,EAIlB;AACEE,MAAAA,WAAW,EAAG;AADhB,KAJkB,CAApB;AAQA,WAAO,EAAC,GAAGhB,KAAJ;AAAUgB,MAAAA;AAAV,KAAP;AACH;;AAEE,SAAQhB,KAAR;AAED,CA/DD;;KAAMD,O;AAiEN,eAAeA,OAAf","sourcesContent":[" \r\n\r\n \r\n const Reducer = (state,action) => {\r\n    \r\n    if (action.type === 'REMOVE') {\r\n        return{\r\n            ...state,\r\n            item:state.item.filter((elem)=> elem.id !== action.payload  )\r\n        }\r\n    }\r\n\r\n    if (action.type === 'REMOVEALL') {\r\n        return {...state,item:[]}\r\n    }\r\n   \r\n    if (action.type === 'INCREASE') {\r\n        const updateincrease = state.item.map((elem)=>{\r\n            if(elem.id === action.payload){\r\n                return {...elem, quantity :elem.quantity + 1};\r\n            }\r\n            return elem\r\n        })\r\n        return {...state,item:updateincrease}\r\n    }\r\n\r\n    if (action.type==='DECREASE') {\r\n const  updatedecrease = state.item.map((elem)=>{\r\n  if (elem.id === action.payload) {\r\n    return {...elem,quantity:elem.quantity-1};\r\n        //  if (elem.quantity>1) {\r\n        //     return {...elem,quantity:elem.quantity-1};\r\n        //  }\r\n   }\r\n   return elem\r\n }).filter((elem)=> elem.quantity !== 0 )\r\n     return{...state,item:updatedecrease}   \r\n    }\r\n\r\nif (action.type === 'total_item') {\r\n     let {totalItem} = state.item.reduce((accum,curVal)=>{\r\n        let {quantity} = curVal;\r\n        accum.totalItem += quantity;\r\n\r\n        return accum;\r\n     },{\r\n        totalItem:0,\r\n        \r\n     }) \r\n     return {...state,totalItem}\r\n}\r\n\r\nif (action.type === 'total_amount') {\r\n    let {totalAmount} = state.item.reduce((accum,val)=>{\r\n        let {price} = curVal\r\n        accum.totalAmount+=price\r\n        return accum\r\n    },{\r\n        totalAmount : 0\r\n    })\r\n\r\n    return {...state,totalAmount}\r\n}\r\n\r\n   return  state;\r\n   \r\n }\r\n \r\n export default Reducer"]},"metadata":{},"sourceType":"module"}