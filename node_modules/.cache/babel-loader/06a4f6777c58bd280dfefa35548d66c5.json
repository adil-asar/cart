{"ast":null,"code":"const Reducer = (state, action) => {\n  if (action.type === 'REMOVE') {\n    return { ...state,\n      item: state.item.filter(elem => elem.id !== action.payload)\n    };\n  }\n\n  if (action.type === 'REMOVEALL') {\n    return { ...state,\n      item: []\n    };\n  }\n\n  if (action.type === 'INCREASE') {\n    const updateincrease = state.item.map(elem => {\n      if (elem.id === action.payload) {\n        return { ...elem,\n          quantity: elem.quantity + 1\n        };\n      }\n\n      return elem;\n    });\n    return { ...state,\n      item: updateincrease\n    };\n  }\n\n  if (action.type === 'DECREASE') {\n    const updatedecrease = state.item.map(elem => {\n      if (elem.id === action.payload) {\n        return { ...elem,\n          quantity: elem.quantity - 1\n        }; //  if (elem.quantity>1) {\n        //     return {...elem,quantity:elem.quantity-1};\n        //  }\n      }\n\n      return elem;\n    }).filter(elem => elem.quantity !== 0);\n    return { ...state,\n      item: updatedecrease\n    };\n  }\n\n  if (action.type === 'total_item') {\n    let {\n      totalItem\n    } = state.item.reduce((accum, curVal) => {\n      let {\n        quantity\n      } = curVal;\n      accum.totalItem += quantity;\n      return accum;\n    }, {\n      totalItem: 0\n    });\n    return { ...state,\n      totalItem\n    };\n  }\n\n  if (action.type === 'total_amount') {\n    let {\n      totalAmount\n    } = state.item.reduce((acum, val) => {\n      let {\n        price\n      } = val;\n      acum.totalAmount += price;\n      return acum;\n    }, {\n      totalAmount: 0\n    });\n    return { ...state,\n      totalAmount\n    };\n  }\n\n  return state;\n};\n\n_c = Reducer;\nexport default Reducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reducer\");","map":{"version":3,"sources":["D:/React-Pro/cart/src/reducer.js"],"names":["Reducer","state","action","type","item","filter","elem","id","payload","updateincrease","map","quantity","updatedecrease","totalItem","reduce","accum","curVal","totalAmount","acum","val","price"],"mappings":"AAGA,MAAMA,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAE/B,MAAIA,MAAM,CAACC,IAAP,KAAgB,QAApB,EAA8B;AAC1B,WAAO,EACH,GAAGF,KADA;AAEHG,MAAAA,IAAI,EAAEH,KAAK,CAACG,IAAN,CAAWC,MAAX,CAAmBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACM,OAA/C;AAFH,KAAP;AAIH;;AAED,MAAIN,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;AAC7B,WAAO,EAAE,GAAGF,KAAL;AAAYG,MAAAA,IAAI,EAAE;AAAlB,KAAP;AACH;;AAED,MAAIF,MAAM,CAACC,IAAP,KAAgB,UAApB,EAAgC;AAC5B,UAAMM,cAAc,GAAGR,KAAK,CAACG,IAAN,CAAWM,GAAX,CAAgBJ,IAAD,IAAU;AAC5C,UAAIA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACM,OAAvB,EAAgC;AAC5B,eAAO,EAAE,GAAGF,IAAL;AAAWK,UAAAA,QAAQ,EAAEL,IAAI,CAACK,QAAL,GAAgB;AAArC,SAAP;AACH;;AACD,aAAOL,IAAP;AACH,KALsB,CAAvB;AAMA,WAAO,EAAE,GAAGL,KAAL;AAAYG,MAAAA,IAAI,EAAEK;AAAlB,KAAP;AACH;;AAED,MAAIP,MAAM,CAACC,IAAP,KAAgB,UAApB,EAAgC;AAC5B,UAAMS,cAAc,GAAGX,KAAK,CAACG,IAAN,CAAWM,GAAX,CAAgBJ,IAAD,IAAU;AAC5C,UAAIA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACM,OAAvB,EAAgC;AAC5B,eAAO,EAAE,GAAGF,IAAL;AAAWK,UAAAA,QAAQ,EAAEL,IAAI,CAACK,QAAL,GAAgB;AAArC,SAAP,CAD4B,CAE5B;AACA;AACA;AACH;;AACD,aAAOL,IAAP;AACH,KARsB,EAQpBD,MARoB,CAQZC,IAAD,IAAUA,IAAI,CAACK,QAAL,KAAkB,CARf,CAAvB;AASA,WAAO,EAAE,GAAGV,KAAL;AAAYG,MAAAA,IAAI,EAAEQ;AAAlB,KAAP;AACH;;AAED,MAAIV,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAkC;AAC9B,QAAI;AAAEU,MAAAA;AAAF,QAAgBZ,KAAK,CAACG,IAAN,CAAWU,MAAX,CAAkB,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrD,UAAI;AAAEL,QAAAA;AAAF,UAAeK,MAAnB;AACAD,MAAAA,KAAK,CAACF,SAAN,IAAmBF,QAAnB;AACA,aAAOI,KAAP;AACH,KAJmB,EAIjB;AACCF,MAAAA,SAAS,EAAE;AADZ,KAJiB,CAApB;AAOA,WAAO,EAAE,GAAGZ,KAAL;AAAYY,MAAAA;AAAZ,KAAP;AACH;;AAED,MAAIX,MAAM,CAACC,IAAP,KAAgB,cAApB,EAAoC;AAChC,QAAI;AAAEc,MAAAA;AAAF,QAAkBhB,KAAK,CAACG,IAAN,CAAWU,MAAX,CAAkB,CAACI,IAAD,EAAOC,GAAP,KAAe;AACnD,UAAI;AAAEC,QAAAA;AAAF,UAAYD,GAAhB;AACAD,MAAAA,IAAI,CAACD,WAAL,IAAoBG,KAApB;AACA,aAAOF,IAAP;AACH,KAJqB,EAKhB;AACED,MAAAA,WAAW,EAAE;AADf,KALgB,CAAtB;AAQI,WAAO,EAAC,GAAGhB,KAAJ;AAAUgB,MAAAA;AAAV,KAAP;AACP;;AAID,SAAOhB,KAAP;AAEH,CA/DD;;KAAMD,O;AAiEN,eAAeA,OAAf","sourcesContent":["\r\n\r\n\r\nconst Reducer = (state, action) => {\r\n\r\n    if (action.type === 'REMOVE') {\r\n        return {\r\n            ...state,\r\n            item: state.item.filter((elem) => elem.id !== action.payload)\r\n        }\r\n    }\r\n\r\n    if (action.type === 'REMOVEALL') {\r\n        return { ...state, item: [] }\r\n    }\r\n\r\n    if (action.type === 'INCREASE') {\r\n        const updateincrease = state.item.map((elem) => {\r\n            if (elem.id === action.payload) {\r\n                return { ...elem, quantity: elem.quantity + 1 };\r\n            }\r\n            return elem\r\n        })\r\n        return { ...state, item: updateincrease }\r\n    }\r\n\r\n    if (action.type === 'DECREASE') {\r\n        const updatedecrease = state.item.map((elem) => {\r\n            if (elem.id === action.payload) {\r\n                return { ...elem, quantity: elem.quantity - 1 };\r\n                //  if (elem.quantity>1) {\r\n                //     return {...elem,quantity:elem.quantity-1};\r\n                //  }\r\n            }\r\n            return elem\r\n        }).filter((elem) => elem.quantity !== 0)\r\n        return { ...state, item: updatedecrease }\r\n    }\r\n\r\n    if (action.type === 'total_item') {\r\n        let { totalItem } = state.item.reduce((accum, curVal) => {\r\n            let { quantity } = curVal;\r\n            accum.totalItem += quantity;\r\n            return accum;\r\n        }, {\r\n            totalItem: 0\r\n        })\r\n        return { ...state, totalItem }\r\n    }\r\n\r\n    if (action.type === 'total_amount') {\r\n        let { totalAmount } = state.item.reduce((acum, val) => {\r\n            let { price } = val;\r\n            acum.totalAmount += price;\r\n            return acum;\r\n        }\r\n            , {\r\n                totalAmount: 0\r\n            })\r\n            return {...state,totalAmount}\r\n    }\r\n\r\n\r\n\r\n    return state;\r\n\r\n}\r\n\r\nexport default Reducer"]},"metadata":{},"sourceType":"module"}